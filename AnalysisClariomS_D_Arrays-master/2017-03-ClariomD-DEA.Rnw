
\textbf{Data filtering}
<<setDirs,echo=FALSE>>=
mainDir <-getwd()
workingDir <- mainDir
dataDir <-file.path(mainDir, "dades")
celDir <-  file.path(workingDir, "celfiles")
celDir2 <-  file.path(workingDir, "celfiles2")
resultsDir <- file.path(workingDir, "results")
imagesDir<-file.path(mainDir,"images")
@

<<options,echo=FALSE>>=
require(knitr)
opts_chunk$set(fig.path = imagesDir, echo=FALSE, message=FALSE,warnings = FALSE )
options(warn=-1)
@

<<loadData,echo=FALSE>>=
load("normData.Rda")
@

Usually, in order to increase statistical power and reduce unnecessary noise some genes that
cannot be considered to be either expressed or differentially expressed are removed. In this
study, those genes whose standard deviation was below \textbf{the 50 percentile} of all standard deviations, those genes without a valid \testtt{entrezID} and a valid \testtt{GO Annotation} are also excluded.
These filters have been applied to all the groups of specific questions, setting a list of \textbf{9.352 genes to be included in the analysis}.

<<filtraje,echo=FALSE,results='hide'>>=
#per poder instal.lar el paquet d'annotacions "clariomsmousehttranscriptcluster.db" he tingut que actualitzar manualment(baixar el tar.gz) dels seg√ºents paquets: genefilter,biostrings,summarizedExperiment,Xvector,genomicRanges,oligoclasses,org.mm.eg.db, biocgenerics,IRanges,s4vectors,annotationdbi,clariomsmousehttranscriptcluster.db

library(genefilter)
library(pd.clariom.s.mouse.ht)
library(clariomsmousehttranscriptcluster.db)

#es canvia el paquet d'anotacions de l'objecte eset_rma
annotation(eset_rma) <- "clariomsmousehttranscriptcluster.db"

##Fem primer un filtratge per variabilitat. Queden 9352
filtered <- nsFilter(eset_rma, require.entrez=TRUE,
         var.func=IQR, remove.dupEntrez=TRUE, require.GOBP=TRUE, 
         require.GOCC=TRUE, require.GOMF=TRUE,
         var.cutoff=0.5, var.filter=TRUE,
         filterByQuantile=TRUE, feature.exclude="^AFFX")

#es canvia el paquet d'anotacions de l'objecte eset_rma_ISC
annotation(eset_rma_ISC) <- "clariomsmousehttranscriptcluster.db"
##Fem primer un filtratge per variabilitat. Queden 9352
filtered.ISC <- nsFilter(eset_rma_ISC, require.entrez=TRUE,
         var.func=IQR, remove.dupEntrez=TRUE, require.GOBP=TRUE, 
         require.GOCC=TRUE, require.GOMF=TRUE,
         var.cutoff=0.5, var.filter=TRUE,
         filterByQuantile=TRUE, feature.exclude="^AFFX")

#es canvia el paquet d'anotacions de l'objecte eset_rma_SHAM
annotation(eset_rma_SHAM) <- "clariomsmousehttranscriptcluster.db"
##Fem primer un filtratge per variabilitat. Queden 9352
filtered.SHAM <- nsFilter(eset_rma_SHAM, require.entrez=TRUE,
         var.func=IQR, remove.dupEntrez=TRUE, require.GOBP=TRUE, 
         require.GOCC=TRUE, require.GOMF=TRUE,
         var.cutoff=0.5, var.filter=TRUE,
         filterByQuantile=TRUE, feature.exclude="^AFFX")
@ 


<<filtrado,echo=FALSE>>=
#print(filtered$filter.log)
eset_filtered <-filtered$eset
eset_filtered_SHAM <-filtered.SHAM$eset
eset_filtered_ISC <-filtered.ISC$eset
@ 

<<writeNormalized,echo=FALSE>>=
#shortNames<- paste(pData(eset_rma)$Group, pData(eset_rma)$SampleIDs,sep=".")
#sum(rownames(pData(eset_filtered))!=colnames(exprs(eset_filtered)))
#colnames(exprs(eset_filtered))<- colnames(exprs(eset_rma))<- shortNames
write.csv2(exprs(eset_rma), file.path(resultsDir, "Normalized.All.csv"))
write.csv2(exprs(eset_filtered), file.path(resultsDir, "Normalized.Filtered.csv"))
save(eset_rma, eset_filtered, eset_filtered_SHAM,eset_filtered_ISC,file=file.path(resultsDir, "FilteredData.Rda"))
@ 


\subsection{Selection of Differentially Expressed Genes}
As previously commented (\ref{objectives}) the goal of the study is to find differentially expressed genes between two regions of the mouse's brain (ipsilateral and contralateral) in ischemic animals and sham animals. To achieve this main objective different specific comparisons has been performed:
\begin{itemize}
\item Effect of \textit{Brain region}:
  \begin{enumerate}
    \item In \texttt{Sham} animals: IPSI.SHAM vs CONT.SHAM = IPSI.SHAM - CONT.SHAM
    \item In \texttt{Ischemic} animals: IPSI.ISC vs CONT.ISC = IPSI.ISC - CONT.ISC
  \end{enumerate}
\end{itemize}
\begin{itemize}
\item Effect of \textit{Treatment}:
\begin{enumerate}
    \item In \texttt{Ipsilateral} region: IPSI.ISC vs IPSI.SHAM = IPSI.ISC - IPSI.SHAM
    \item In \texttt{Contralateral} region: CONT.ISC vs CONT.SHAM = CONT.ISC - CONT.SHAM
  \end{enumerate}
\end{itemize}

\noindent When analyzing the effect of \textit{Brain.region} factor, the fact that the regions of the mouse's brain analyzed come from the same animal, will be take into account in the fitted model.
\\
The analysis to select differentially expressed genes has been
based on adjusting a linear model with empirical bayes moderation of the variance. This is a technique similar to ANOVA specifically developed for microarray data
analysis by \cite{Smyth:2004}.
\\
Each comparison yields a list of genes sorted from most to least differentially expressed
genes which is called generically a top table. The resulting top tables are presented in an html file  with dynamic links to the gene identifiers. Besides for each comparisons the corresponding Volcano Plot and a comma-separated file are provided in the \texttt{results} folder.
\\

<<setContrasts, echo=FALSE,results='hide'>>=
library(limma)

##set contrast for PAIRED comparison in SHAM
targetsSHAM <- targets[targets$Treatment=="SHAM",]
#lev_SHAM<-as.factor(c("SHAM.CL","SHAM.IP"))
designSHAM <- model.matrix( ~0 + targetsSHAM$Brain_Region+ targetsSHAM$Mouse)
#dim(designSHAM) 6 3
#qr(as.matrix(designSHAM))$rank 3
#is.fullrank(as.matrix(designSHAM)) TRUE
colnames(designSHAM)<-c( "SHAM.CL",  "SHAM.IP","Mouse")

contrastM_SHAM <- makeContrasts(SHAM.IPvsSHAM.CL = SHAM.IP - SHAM.CL,
                                levels=designSHAM)

##set contrast for PAIRED comparison in ISC
targetsISC <- targets[targets$Treatment=="ISC",]
designISC <- model.matrix( ~0 + targetsISC$Brain_Region+ targetsISC$Mouse)
#dim(designISC) 14 3
#qr(as.matrix(designISC))$rank 3
#is.fullrank(as.matrix(designISC)) TRUE
colnames(designISC)<-c( "ISC.CL",  "ISC.IP","Mouse")

contrastM_ISC <- makeContrasts(ISC.IPvsISC.CL = ISC.IP - ISC.CL,
                                levels=designISC)

#set contrast for UNpaired comparisons
lev <- as.factor(targets[,1])
batch<-as.factor(targets$Batch)
design2 <- model.matrix( ~ 0 + lev + batch)        
colnames(design2)<-c("ISC.CL","ISC.IP","SHAM.CL","SHAM.IP","batch")
rownames(design2)<-targets$ShortName
print(design2)
#dim(design2) 20 5
#qr(as.matrix(design2))$rank 5
#is.fullrank(as.matrix(design2)) TRUE

contrastsMatrix2 <- makeContrasts(ISC.IPvsSHAM.IP = ISC.IP - SHAM.IP,
                                 ISC.CLvsSHAM.CL = ISC.CL - SHAM.CL,
                                 levels = design2)
print(contrastsMatrix2)
@

<<linearmodelfit,echo=FALSE>>=
fitSHAM<-lmFit(eset_filtered_SHAM, designSHAM)
fit.main.SHAM<-contrasts.fit(fitSHAM, contrastM_SHAM)
fit.main.SHAM<-eBayes(fit.main.SHAM)

fitISC<-lmFit(eset_filtered_ISC, designISC)
fit.main.ISC<-contrasts.fit(fitISC, contrastM_ISC)
fit.main.ISC<-eBayes(fit.main.ISC)

fit2<-lmFit(eset_filtered, design2)
fit.main2<-contrasts.fit(fit2, contrastsMatrix2)
fit.main2<-eBayes(fit.main2)
@

<<topTables, echo=FALSE, results='hide',message=FALSE>>=
library(ReportingTools)
library(lattice)

###Parired comparisons. 1
topTab_SHAM.IPvsSHAM.CL <- topTable (fit.main.SHAM, number=nrow(fit.main.SHAM), coef="SHAM.IPvsSHAM.CL", adjust="fdr")

rep.theme <- reporting.theme()
lattice.options(default.theme = rep.theme)
deReport <- HTMLReport(shortName = 'topTab_SHAM.IPvsSHAM.CL' ,
                       title = 'Analysis of Differential Expression for: TopTab_SHAM.IPvsSHAM.CL',
                       reportDirectory = "./results")
publish(fit.main.SHAM, deReport, eSet=eset_filtered_SHAM, factor= targetsSHAM$Grupo,coef=1, n=100,pvalueCutoff=1)
finish(deReport)

###Parired comparisons. 2
topTab_ISC.IPvsISC.CL <- topTable (fit.main.ISC, number=nrow(fit.main.ISC), coef="ISC.IPvsISC.CL", adjust="fdr")

deReport <- HTMLReport(shortName = 'topTab_ISC.IPvsISC.CL' ,
                       title = 'Analysis of Differential Expression for: TopTab_ISC.IPvsISC.CL',
                       reportDirectory = "./results")
publish(fit.main.ISC, deReport, eSet=eset_filtered_ISC, factor= targetsISC$Grupo,coef=1, n=100,pvalueCutoff=1)
finish(deReport)

###UNpaired comparisons. 1
topTab_ISC.IPvsSHAM.IP <- topTable (fit.main2, number=nrow(fit.main2), coef="ISC.IPvsSHAM.IP", adjust="fdr")

deReport <- HTMLReport(shortName = 'topTab_ISC.IPvsSHAM.IP' ,
                       title = 'Analysis of Differential Expression for: TopTab_ISC.IPvsSHAM.IP',
                       reportDirectory = "./results")
publish(fit.main2, deReport, eSet=eset_filtered, factor= lev,coef=1, n=100,pvalueCutoff=1)
finish(deReport)

###UNpaired comparisons. 2
topTab_ISC.CLvsSHAM.CL <- topTable (fit.main2, number=nrow(fit.main2), coef="ISC.CLvsSHAM.CL", adjust="fdr")

deReport <- HTMLReport(shortName = 'topTab_ISC.CLvsSHAM.CL' ,
                       title = 'Analysis of Differential Expression for: TopTab_ISC.CLvsSHAM.CL',
                       reportDirectory = "./results")
publish(fit.main2, deReport, eSet=eset_filtered, factor= lev,coef=2, n=100, pvalueCutoff=1)
finish(deReport)
@

The results in a glance of the number of differentially expressed genes in each comparisons at different thresholds, are shown in table \ref{tab:numgeneschanged}:
\newpage

<<numsgenechange,echo=FALSE>>=
################################################################################
####################
##### geneSelectable
####################
##### topTab: Toptable en format '.csv'
##### adj0: p.valor adjustat pel qual filtrar (de normal, 0.01)
##### adj1: segon p.valor adjustat pel qual filtrar (de normal, 0.05)
##### adj2: tercer p.valor adjustat pel qual filtrar (de normal, 0.25)
##### P1: p.valor pel qual filtrar (de normal, 0.01)
##### P2: segon p.valor pel qual filtrar (de normal, 0.05)
################################################################################
genesSelectable <- function (topTab, adj0, adj1, adj2, P1, P2,FC=0)
{
  upBelowB <- sum(topTab$B > 0  & topTab$t > 0 & abs(topTab$logFC) > FC)
  downBelowB <- sum(topTab$B > 0  & topTab$t < 0 & abs(topTab$logFC) > FC)
  
  upBelowAdj0 <- sum(topTab$adj.P.Val < adj0 & topTab$t > 0 & abs(topTab$logFC) > FC)
  downBelowAdj0 <- sum(topTab$adj.P.Val < adj0 & topTab$t < 0 & abs(topTab$logFC) > FC)
  
  upBelowAdj1 <- sum(topTab$adj.P.Val < adj1 & topTab$t > 0 & abs(topTab$logFC) > FC)
  downBelowAdj1 <- sum(topTab$adj.P.Val < adj1 & topTab$t < 0 & abs(topTab$logFC) > FC)
  
  upBelowAdj2 <- sum(topTab$adj.P.Val < adj2 & topTab$t > 0 & abs(topTab$logFC) > FC)
  downBelowAdj2 <- sum(topTab$adj.P.Val < adj2 & topTab$t < 0 & abs(topTab$logFC) > FC)
  
  upBelowP1 <- sum(topTab$P.Value < P1 & topTab$t > 0 & abs(topTab$logFC) > FC)
  downBelowP1 <- sum (topTab$P.Value < P1 & topTab$t < 0 & abs(topTab$logFC) > FC)
  
  upBelowP2 <- sum(topTab$P.Value < P2 & topTab$t > 0 & abs(topTab$logFC) > FC)
  downBelowP2 <- sum(topTab$P.Value < P2 & topTab$t < 0 & abs(topTab$logFC) > FC)
  
  return(c(upReg_B = upBelowB,downReg_B = downBelowB,
           upRegAdj0.01 = upBelowAdj0, downRegAdj0.01 = downBelowAdj0,
           upRegAdj0.05 = upBelowAdj1, downRegAdj0.05 = downBelowAdj1,
           upRegAdj0.25 = upBelowAdj2, downRegAdj0.25 = downBelowAdj2,
           upRegP0.01 = upBelowP1, downRegP0.01 = downBelowP1,
           upRegP0.05 = upBelowP2, downRegP0.05 = downBelowP2))   
}

SHAM.IPvsSHAM.CL<-genesSelectable(topTab_SHAM.IPvsSHAM.CL,0.01,0.05,0.25,0.01,0.05)
ISC.IPvsISC.CL<-genesSelectable(topTab_ISC.IPvsISC.CL,0.01,0.05,0.25,0.01,0.05)
ISC.IPvsSHAM.IP<-genesSelectable(topTab_ISC.IPvsSHAM.IP,0.01,0.05,0.25,0.01,0.05)
ISC.CLvsSHAM.CL<-genesSelectable(topTab_ISC.CLvsSHAM.CL,0.01,0.05,0.25,0.01,0.05)
#fem el data frame
numGenesChanged<-cbind.data.frame(SHAM.IPvsSHAM.CL,ISC.IPvsISC.CL,ISC.IPvsSHAM.IP,ISC.CLvsSHAM.CL)
write.csv2(numGenesChanged,file.path(resultsDir,"numGenesChanged.csv"),sep=";")
@


<<numgenetable,results='asis',echo=FALSE>>=
library(xtable)
x.big2 <- xtable(numGenesChanged,caption="Number of DEG for different thresholds",label="tab:numgeneschanged")
print(x.big2, tabular.environment = 'longtable', floating = FALSE,size="tiny")
@

\subparagraph{p-values adjustment}

If one wishes to have a statistically grounded criteria, the selection of the differentially expressed genes should be based on adjusted p-values (less than 0.01) or $B$ statistic (greater than 0). If these criteria yield too few genes, the table \ref{tab:numgeneschanged} indicates how many genes will yield a less restrictive criteria such as calling those differentially expressed genes with, for instance, adjusted p-values less than 0.25 or unadjusted p-values smaller than 0.05.\\

<<anotagenes,echo=FALSE>>=
#Information in the anotation package
#clariomsmousehttranscriptcluster()
library(annaffy)
filteredgenes<-read.csv(file.path(resultsDir, "Normalized.Filtered.csv"),sep=";",header=TRUE)
rownames(filteredgenes)<-filteredgenes$X
genesSelected <- rownames(filteredgenes)
at <- aafTableAnn(genesSelected, "clariomsmousehttranscriptcluster.db")
saveHTML (at, file.path(resultsDir, "Anotations.html"), 
          "Annotations for filtered genes")
saveText (at, file.path(resultsDir, "Anotations.csv"), header=TRUE)
@

<<toptable2csv,echo=FALSE>>=
library(annotate)
listofcomparisons<-list(topTab_SHAM.IPvsSHAM.CL,topTab_ISC.IPvsISC.CL,topTab_ISC.IPvsSHAM.IP,topTab_ISC.CLvsSHAM.CL)
listofcomparisonsnames<-c("topTab_SHAM.IPvsSHAM.CL","topTab_ISC.IPvsISC.CL","topTab_ISC.IPvsSHAM.IP","topTab_ISC.CLvsSHAM.CL") 

##con este loop creamos los csv y tb unos dataframes que utilizaremos despues para las tables del informe
for (i in 1:length(listofcomparisons))  {
  topTab<-listofcomparisons[[i]]
  EntrezsA <- getEG (rownames(topTab), annotation(eset_rma))
  SymbolsA <- getSYMBOL (rownames(topTab), annotation(eset_rma))
  otherNames = cbind.data.frame(SymbolsA, EntrezsA, topTab)
  names(otherNames) = c("Gene Symbol", "Entrez", colnames(topTab))
  assign(paste0("csv2",listofcomparisonsnames[i],sep=""),data.frame(otherNames))
  write.csv2(otherNames, file.path(resultsDir, paste("ExpressAndTop_",listofcomparisonsnames[i],".csv",sep="")))
}
@


In tables \ref{tab:top1}, \ref{tab:top2}, \ref{tab:top3} and \ref{tab:top4} the 10 more differentially expressed genes for each comparisons can be found.
%\begin{table}
%\tiny
<<topGenes1, echo=FALSE, results='asis'>>=
csvtable1<-xtable(csv2topTab_SHAM.IPvsSHAM.CL[1:10,1:8],caption="10 genes more differentially expressed in comparison SHAM.IPvsSHAM.CL",label="tab:top1")
print(csvtable1, tabular.environment='longtable',floating=FALSE,size="tiny")
@
% \caption{10 genes more differentially expressed in comparison SHAM.IPvsSHAM.CL}
% \label{tab:top1}
% \end{table}

%\begin{table}
%\tiny
<<topGenes2, echo=FALSE, results='asis'>>=
csvtable2<-xtable(csv2topTab_ISC.IPvsISC.CL[1:10,1:8],caption="10 genes more differentially expressed in comparison ISC.IPvsISC.CL",label="tab:top2")
print(csvtable2, tabular.environment='longtable',floating=FALSE,size="tiny")
@
%\caption{10 genes more differentially expressed in comparison ISC.IPvsISC.CL}
%\label{tab:top2}
%\end{table}

% \begin{table}
% \tiny
<<topGenes3, echo=FALSE, results='asis'>>=
csvtable3<-xtable(csv2topTab_ISC.IPvsSHAM.IP[1:10,1:8],caption="10 genes more differentially expressed in comparison ISC.IPvsSHAM.IP",label="tab:top3")
print(csvtable3, tabular.environment='longtable',floating=FALSE,size="tiny")
@
% \caption{10 genes more differentially expressed in comparison ISC.IPvsSHAM.IP}
% \label{tab:top3}
% \end{table}

% \begin{table}
% \tiny
<<topGenes4, echo=FALSE, results='asis'>>=
csvtable4<-xtable(csv2topTab_ISC.CLvsSHAM.CL[1:10,1:8],caption="10 genes more differentially expressed in comparison ISC.CLvsSHAM.CL",label="tab:top4")
print(csvtable4, tabular.environment='longtable',floating=FALSE,size="tiny")
@
% \caption{10 genes more differentially expressed in comparison ISC.CLvsSHAM.CL}
% \label{tab:top4}
% \end{table}

\normalsize
In figure \ref{fig:volcano} the Volcano plot for each comparison can be found:

<<volcanos,echo=FALSE,results='hide',message=FALSE>>=
library(calibrate)
listofcsv<-list(csv2topTab_SHAM.IPvsSHAM.CL,csv2topTab_ISC.IPvsISC.CL,csv2topTab_ISC.IPvsSHAM.IP,csv2topTab_ISC.CLvsSHAM.CL)
listofcomparnames<-c("SHAM.IPvsSHAM.CL","ISC.IPvsISC.CL","ISC.IPvsSHAM.IP","ISC.CLvsSHAM.CL") 
pdf(file.path(resultsDir,"Volcanos.pdf"))
par(mfrow=c(2,2))
for(i in 1:length(listofcsv)){
csv<-listofcsv[[i]]
with(csv, plot(logFC, B, pch=20, main=paste("Volcano plot for:",listofcomparnames[i], sep=" "), xlim=c(min(csv$logFC),max(csv$logFC))))
abline(v=-1,lty=3)
abline(v=1,lty=3)
with(subset(csv, adj.P.Val<.05 & abs(logFC)>1), points(logFC, B, pch=20, col="green"))
with(subset(csv, adj.P.Val<.05 & abs(logFC)>1), textxy(logFC, B, labs=Gene.Symbol, cex=.7,offset=0.3))
}
dev.off()
par(mfrow=c(1,1))
@

\begin{figure}[htbp]
\centering
\includegraphics[scale=0.6]{results/Volcanos.pdf}
  \caption{Volcano plots for each comparison.}
  \label{fig:volcano}
\end{figure}

<<volcanos2pdf,echo=FALSE>>=
for(i in 1:length(listofcsv)){
csv<-listofcsv[[i]]
file=paste("VolcanoPlot", listofcomparnames[i], ".pdf", sep="")
pdf(file=file.path(resultsDir, file), paper="special", width=6, height=6)
with(csv, plot(logFC, B, pch=20, main=paste("Volcano plot for:",listofcomparnames[i], sep=" "), xlim=c(min(csv$logFC),max(csv$logFC))))
abline(v=-1,lty=3)
abline(v=1,lty=3)
with(subset(csv, adj.P.Val<.05 & abs(logFC)>1), points(logFC, B, pch=20, col="green"))
with(subset(csv, adj.P.Val<.05 & abs(logFC)>1), textxy(logFC, B, labs=Gene.Symbol, cex=.7,offset=0.3))
dev.off()
}
@

<<saveRDA,echo=FALSE>>=
save(csv2topTab_SHAM.IPvsSHAM.CL,csv2topTab_ISC.IPvsISC.CL,csv2topTab_ISC.IPvsSHAM.IP,csv2topTab_ISC.CLvsSHAM.CL,topTab_SHAM.IPvsSHAM.CL,topTab_ISC.IPvsISC.CL,topTab_ISC.IPvsSHAM.IP,topTab_ISC.CLvsSHAM.CL,eset_rma,eset_filtered,eset_filtered_ISC,eset_filtered_SHAM,targets,targetsSHAM,targetsISC,fit.main.ISC,fit.main.SHAM,fit.main2,file="afterTopTabs.Rda")
@

