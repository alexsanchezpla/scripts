library(Rsamtools)
bf <- BamFile(bam.file)
installifnot("TxDb.Dmelanogaster.UCSC.dm3.ensGene")
require(TxDb.Dmelanogaster.UCSC.dm3.ensGene)
require(TxDb.Dmelanogaster.UCSC.dm3.ensGene)
update.packages()
bioCifnot <- function (packageName){
if (!(require(packageName, char.only=TRUE)) {
source("http://bioconductor.org/biocLite.R")
biocLite(packageName)
}
}
bioCifnot <- function (packageName){
if (!(require(packageName, char.only=TRUE))) {
source("http://bioconductor.org/biocLite.R")
biocLite(packageName)
}
}
installifnot <- function (packageName){
if (!(require(packageName, char.only=TRUE))) {
install.packages(packageName)
}
}
installifnot("knitr")
installifnot <- function (packageName){
if (!(require(packageName, character.only=TRUE))) {
install.packages(packageName)
}
}
bioCifnot <- function (packageName){
if (!(require(packageName, character.only=TRUE))) {
source("http://bioconductor.org/biocLite.R")
biocLite(packageName)
}
}
installifnot("knitr")
bioCifonly("FGNet")
bioCifnot("org.Mm.eg.db")
bioCifnot("FGNet")
biocLite(c("RGtk2", "RCurl","RDAVIDWebService", "gage", "topGO", "KEGGprofile","GO.db", "KEGG.db", "reactome.db",
"org.Sc.sgd.db"))
matrix(c(0.146,0.075,0.378,0.401,0.194,0.157,0.279,0.370,0.189,0.182,0.268,0.361,0.134,0.187,0.414,0.265),nrow=4,ncol=4,byrow=F)
matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.182, 0.189, 0.268, 0.361,
0.187, 0.134, 0.414, 0.265),
nrow=4, ncol=4, byrow=F)
matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, ncol=4, byrow=F)
matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=F)
subMat <-matrix(0, nrow=4, ncol=4)
nrow=4, byrow=T)
matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=T)
matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=FALSE)
A <- probs - subMat
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=FALSE)
subMat <- matrix(0, nrow=4, ncol=4)
subMat[1,2]= probs[1,2]-1
subMat[2,1]= probs[2,1]-1
subMat[3,4]= probs[3,4]-1
subMat[4,3]= probs[4,3]-1
A <- probs - subMat
A
subMat <- matrix(0, nrow=4, ncol=4)
subMat
subMat[1,2]= probs[1,2]-1
subMat[2,1]= probs[2,1]-1
subMat[3,4]= probs[3,4]-1
subMat[4,3]= probs[4,3]-1
A
[1,2]
subMat[1,2]= probs[1,2]-1
subMat[2,1]= probs[2,1]-1
subMat[3,4]= probs[3,4]-1
subMat[4,3]= probs[4,3]-1
subMat(1,2)= probs(1,2)-1
subMat(2,1)= probs(2,1)-1
subMat(3,4)= probs(3,4)-1
subMat(4,3)= probs(4,3)-1
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=FALSE)
subMat <- matrix(0, nrow=4, ncol=4)
subMat(1,2)= probs(1,2)-1
probs[1,2]
probs[1,2]-1
subMat[1,2]<- probs[1,2]-1
subMat <- matrix(0, nrow=4, ncol=4)
subMat[1,2]<- probs[1,2]-1
subMat[2,1]<-probs[2,1]-1
subMat[3,4]<-probs[3,4]-1
subMat[4,3]<-probs[4,3]-1
subMat
subMat[1,2]<- -1
subMat[2,1]<- -1
subMat[3,4]<- -1
subMat[4,3]<- -1
A <- probs - subMat
A
b <- matrix (c(0,0,0,0), nrow=4)
b
round(solve(A,b),3)
det(A)
A
A <- probs + subMat
b <- matrix (c(0,0,0,0), nrow=4)
round(solve(A,b),3)
det(A)
probs
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=FALSE)
colnames(probs) <- c("A", "T", "G", "C")
rownames(probs) <- c("T", "A", "C", "G")
probs
probs
subMat <- matrix(0, nrow=4, ncol=4)
subMat[1,2]<-subMat[2,1]<-subMat[3,4]<-subMat[4,3]<- -1A <- probs + subMat
subMat
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=FALSE)
colnames(probs) <- c("A", "T", "G", "C")
rownames(probs) <- c("T", "A", "C", "G")
probs
subMat <- matrix(0, nrow=4, ncol=4)
subMat[1,2]<-subMat[2,1]<-subMat[3,4]<-subMat[4,3]<- 1
subMat
A <- probs - subMat
A
det(A)
b <- matrix (c(0,0,0,0), nrow=4)
round(solve(A,b),3)
margin.table(probs, 1)
margin.table(probs, 2)
subMat
A <- probs + subMat
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=FALSE)
colnames(probs) <- c("A", "T", "G", "C")
rownames(probs) <- c("T", "A", "C", "G")
probs
margin.table(probs, 1)
margin.table(probs, 2)
subMat <- matrix(0, nrow=4, ncol=4)
subMat[1,2]<-subMat[2,1]<-subMat[3,4]<-subMat[4,3]<- -1
subMat
A <- probs + subMat
det(A)
b <- matrix (c(0,0,0,0), nrow=4)
round(solve(A,b),3)
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=FALSE)
probs
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,1,
0.157, 0.194, 0.279, 0.370, 1,
0.187, 0.134, 0.414, 0.265, 1,
0.182, 0.189, 0.268, 0.361,1),
nrow=4, byrow=FALSE)
probs
nrow=5, byrow=FALSE)
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361,
1,1,1,1),
nrow=5, byrow=FALSE)
probs
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,1
0.157, 0.194, 0.279, 0.370, 1,
0.187, 0.134, 0.414, 0.265, 1,
0.182, 0.189, 0.268, 0.361,1),
nrow=5, byrow=FALSE)
probs
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=FALSE)
probs
probs <- rbind(probs, c(1,1,1,1))
probs
colnames(probs) <- c("A", "T", "G", "C")
rownames(probs) <- c("T", "A", "C", "G", "lig"")
rownames(probs) <- c("T", "A", "C", "G", "lig")
probs
rownames(probs) <- c("T", "A", "C", "G", "lig")
probs
margin.table(probs, 1)
margin.table(probs, 2)
subMat <- matrix(0, nrow=5, ncol=4)
subMat[1,2]<-subMat[2,1]<-subMat[3,4]<-subMat[4,3]<- -1
subMat
A <- probs + subMat
b <- matrix (c(0,0,0,0,1), nrow=5)
round(solve(A,b),3)
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=FALSE)
probs
p2 <- probs[1:2,1:2]
det(p2)
p3 <- probs[1:3,1:3]
p3
det(p3)
A
subMat <- matrix(0, nrow=5, ncol=4)
subMat[1,2]<-subMat[2,1]<-subMat[3,4]<-subMat[4,3]<- -1
subMat
A <- probs + subMat
probs
subMat <- matrix(0, nrow=4, ncol=4)
subMat[1,2]<-subMat[2,1]<-subMat[3,4]<-subMat[4,3]<- -1
subMat
A <- probs + subMat
det(A)
A2 <- A[1:2,1:2]
det(A2)
A3 <- A[1:3,1:3]
det(A3)
A<- A[-4,]
A
A <- rbind(A,c(1,1,1,1)
)
A
b <- matrix (c(0,0,0,1), nrow=4)
round(solve(A,b),3)
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=FALSE)
probs
colnames(probs) <- c("A", "T", "G", "C")
rownames(probs) <- c("T", "A", "C", "G")
probs
subMat <- matrix(0, nrow=4, ncol=4)
subMat[1,2]<-subMat[2,1]<-subMat[3,4]<-subMat[4,3]<- -1
subMat
A <- probs + subMat
det(A)
A2 <- A[1:2,1:2]
det(A2)
A3 <- A[1:3,1:3]
det(A3)
A<- A[-4,]
A <- rbind(A,c(1,1,1,1))
b <- matrix (c(0,0,0,1), nrow=4)
round(solve(A,b),3)
A
det(A)
b <- matrix (c(0,0,0,1), nrow=4)
round(solve(A,b),3)
A <- probs + subMat
A <- A[-3,]
A
A <- rbind(A,c(1,1,1,1))
det(A)
b <- matrix (c(0,0,0,1), nrow=4)
round(solve(A,b),3)
subMat <- matrix(0, nrow=4, ncol=4)
subMat[1,2]<-subMat[2,1]<-subMat[3,4]<-subMat[4,3]<- -1
subMat
A <- probs + subMat
A
A[4,3]<- -0.74
A[4,3]<- -0.74
A2 <- A[1:2,1:2]
det(A2)
A3 <- A[1:3,1:3]
det(A3)
A <- A[-3,]
# A<- A[-4,]
A <- rbind(A,c(1,1,1,1))
det(A)
b <- matrix (c(0,0,0,1), nrow=4)
round(solve(A,b),3)
A <- probs + subMat
A
A <- round(A,2)
A
det(A)
A[3,4]<- -0.730
A[4,3]<- -0.74
A2 <- A[1:2,1:2]
det(A2)
A3 <- A[1:3,1:3]
det(A3)
A <- A[-3,]
# A<- A[-4,]
A <- rbind(A,c(1,1,1,1))
det(A)
b <- matrix (c(0,0,0,1), nrow=4)
round(solve(A,b),3)
probs<- matrix(c(0.075, 0.146, 0.378, 0.401,
0.157, 0.194, 0.279, 0.370,
0.187, 0.134, 0.414, 0.265,
0.182, 0.189, 0.268, 0.361),
nrow=4, byrow=FALSE)
probs
colnames(probs) <- c("A", "T", "G", "C")
rownames(probs) <- c("T", "A", "C", "G")
probs
subMat <- matrix(0, nrow=4, ncol=4)
subMat[1,2]<-subMat[2,1]<-subMat[3,4]<-subMat[4,3]<- -1
subMat
A <- probs + subMat
A
det(A)
A2 <- A[1:2,1:2]
det(A2)
A3 <- A[1:3,1:3]
det(A3)
A <- A[-3,]
# A<- A[-4,]
A <- rbind(A,c(1,1,1,1))
det(A)
A
b <- matrix (c(0,0,0,1), nrow=4)
b
round(solve(A,b),3)
workingDir <-getwd()
dataDir <-file.path(workingDir, "data")
resultsDir <- file.path(workingDir,"results")
celfilesDir <- file.path(workingDir,"celfiles")
setwd(workingDir)
## ----tomaMuestras, eval=FALSE--------------------------------------------
## muestras <- read.csv2(file.path(dataDir, "Asignacion_de_muestras_a_grupos.csv"),
##                       head=T)
## misMuestras <- as.character (muestras$Sample)
## paraAnalisis <- c(sample(misMuestras[1:6], 5),
##                   sample(misMuestras[7:20], 5),
##                   sample(misMuestras[23:48], 5))
## alAnalisis <-muestras[muestras$Sample %in% paraAnalisis,]
## write.table(alAnalisis, file=file.path(dataDir, "targets.txt"),
##             sep="\t", row.names=FALSE, quote=FALSE)
## ----phenoData1,echo=FALSE,print=FALSE,results=tex, eval=TRUE------------
require(Biobase)
my.targets <-read.AnnotatedDataFrame(file.path(dataDir,"targets.txt"),
header = TRUE, row.names = 1)
stopifnot(require(xtable))
x.big<-xtable(pData(my.targets)[,1:4],
label='table.targets',
caption='Archivo targets.txt con la asignaciÃ³n a cada muestra de su condiciÃ³n experimental')
print(x.big,tabular.environment='longtable',floating=FALSE)
setwd("D:/Dropbox (VHIR)/Scripts/Exemple_Analisis_BioC")
workingDir <-getwd()
dataDir <-file.path(workingDir, "data")
resultsDir <- file.path(workingDir,"results")
celfilesDir <- file.path(workingDir,"celfiles")
setwd(workingDir)
require(Biobase)
require(affy)
sampleInfo <- read.AnnotatedDataFrame(file.path(dataDir,"targets.txt"),
header = TRUE, row.names = 1, sep="\t")
fileNames <- rownames(pData(sampleInfo))
rawData <- read.affybatch(filenames=file.path(celfilesDir,fileNames),
phenoData=sampleInfo)
show(rawData)
show(rawData)
## ----preajustes, echo=F, eval=TRUE---------------------------------------
colores <- c(rep("yellow", 5), rep("blue", 5), rep("red", 5))
grupos <- pData(rawData)$Group
numSamples <- nrow(pData(rawData))
sampleNames <-paste( pData(rawData)$SampleIDs, grupos, sep=".")
colnames(exprs(rawData))<-sampleNames
hist(rawData, main="Signal distribution", col=colores, lty=1:numSamples)
legend (x="topright", legend=sampleNames , col=colores, lty=1:numSamples)
## ----boxplot, fig=T, eval=TRUE-------------------------------------------
boxplot(rawData, cex.axis=0.6, col=colores, las=2, names=sampleNames,
main="Signal distribution for selected chips")
stopifnot(require(affy))
eset_rma <- rma(rawData)
eset_rma
## ----normBoxPlot, fig=T, eval=TRUE---------------------------------------
boxplot(eset_rma,main="RMA", names=sampleNames, cex.axis=0.7, col=colores,las=2)
sampleNames
eset_rma
colores
boxplot(eset_rma, main="RMA", names=sampleNames,
cex.axis=0.7, col=colores,las=2)
filtered <- nsFilter(eset_rma, require.entrez=TRUE,
remove.dupEntrez=TRUE, var.func=IQR,
var.cutoff=0.5, var.filter=TRUE,
filterByQuantile=TRUE, feature.exclude="^AFFX")
require(genefilter)
boxplot(rawData, cex.axis=0.6, col=colores, las=2, names=sampleNames,
main="Signal distribution for selected chips")
boxplot(eset_rma, cex.axis=0.6, col=colores, las=2, names=sampleNames,
main="Signal distribution for selected chips")
eset_rma
boxplot(as.data.frame(exprs(eset_rma)), main="RMA", names=sampleNames,
cex.axis=0.7, col=colores,las=2)
installifnot <- function (pckgName){
if(!(require(pckgName, character.only=TRUE))){
source("http://Bioconductor.org/biocLite.R")
biocLite(pckgName)
}
}
installifnot("Biobase")
installifnot("hgu133a.db")
installifnot("affy")
installifnot("affyPLM")
installifnot("arrayQualityMetrics")
installifnot("genefilter")
installifnot("limma")
installifnot("hgu133a.db")
installifnot("annotate")
installifnot("annaffy")
installifnot("hwriter")
installifnot("gplots")
installifnot("GOstats")
boxplot(eset_rma, main="RMA", names=sampleNames,
cex.axis=0.7, col=colores,las=2)
require(genefilter)
filtered <- nsFilter(eset_rma, require.entrez=TRUE,
remove.dupEntrez=TRUE, var.func=IQR,
var.cutoff=0.5, var.filter=TRUE,
filterByQuantile=TRUE, feature.exclude="^AFFX")
## ----filtrado------------------------------------------------------------
names(filtered)
class(filtered$eset)
print(filtered$filter.log)
eset_filtered <-filtered$eset
## ----saveData------------------------------------------------------------
save(eset_rma, eset_filtered, file=file.path(resultsDir, "datos.normalizados.Rda"))
design<-matrix(
c(1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,1,1,1,1),
nrow=15,byrow=F)
colnames(design)<-c("A", "B", "L")
rownames(design) <-  sampleNames
print(design)
## ----setContrasts, eval=TRUE---------------------------------------------
require(limma)
cont.matrix <- makeContrasts (
AvsB = B-A,
AvsL = L-A,
BvsL = L-B,
levels=design)
print(cont.matrix)
require(limma)
fit<-lmFit(eset_rma, design)
fit.main<-contrasts.fit(fit, cont.matrix)
fit.main<-eBayes(fit.main)
## ----print=FALSE, echo=TRUE, eval=TRUE-----------------------------------
topTab_AvsB <- topTable (fit.main, number=nrow(fit.main), coef="AvsB", adjust="fdr")
topTab_AvsL <- topTable (fit.main, number=nrow(fit.main), coef="AvsL", adjust="fdr")
topTab_BvsL  <- topTable (fit.main, number=nrow(fit.main) , coef="BvsL", adjust="fdr")
head(topTab_AvsB)
head(topTab_AvsB, 25)
head(topTab_AvsB, 100)
i<-1
for(i in 1:ncol(cont.matrix)){
compName <-colnames(cont.matrix)[i]
file=paste("volcanoPlot", compName, ".pdf", sep="")
pdf(file=file.path(workingDir, "images", file), paper="special", width=6, height=6)
volcanoplot(fit.main, coef=i, highlight=10, names=fit.main$ID,
main=paste("Differentially expressed genes",compName, sep="\n"))
abline(v=c(-1,1))
dev.off()
cat("\\includegraphics{", file, "}\n\n", sep="")
}
volcanoplot(fit.main, coef="AvsB", highlight=10, names=fit.main$ID)
cat("Numero de genes con un p--valor inferior a 0.05 en cada comparaciÃ³n:\n")
cat ("En la comparaciÃ³n 'A vs B': ", sum(topTab_AvsB$adj.P.Val<=0.05),"\n")
cat ("En la comparaciÃ³n 'A vs L': ", sum(topTab_AvsL$adj.P.Val<=0.05),"\n")
cat ("En la comparaciÃ³n 'B vs L': ", sum(topTab_BvsL$adj.P.Val<=0.05),"\n")
cat("\nNumero de genes con un p--valor inferior a 0.01 en cada comparaciÃ³n:\n")
cat ("En la comparaciÃ³n 'A vs B': ", sum(topTab_AvsB$adj.P.Val<=0.01),"\n")
cat ("En la comparaciÃ³n 'A vs L': ", sum(topTab_AvsL$adj.P.Val<=0.01),"\n")
cat ("En la comparaciÃ³n 'B vs L': ", sum(topTab_BvsL$adj.P.Val<=0.01),"\n")
## ----topGenesAvsB,echo=FALSE,print=FALSE,results=tex, eval=TRUE----------
require(Biobase)
stopifnot(require(xtable))
AvsB10<-xtable(topTab_AvsB[1:10,1:7],
label='topTab_AvsB',
caption='10 genes mÃ¡s expresados diferencialmente en la comparaciÃ³n A vs B')
